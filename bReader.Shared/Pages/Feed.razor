@page "/feed/{FeedPk:int}"
@using bReader.Shared.Utils
@inject IFeedService FeedService
@inject CommonJsInterop CommonJs

@if (currentFeed.IsFavorite)
{
    <FluentButton @onclick="async () => await SetCurrentFeedNotFavoriteAsync()"> <FluentIcon Name="star" Size=Microsoft.Fast.Components.FluentUI.IconSize.Size20 Filled=true style="color:gold"></FluentIcon></FluentButton>
}
else
{
    <FluentButton @onclick="async ()=> await SetCurrentFeedFavoriteAsync()"><FluentIcon Name="star" Size=Microsoft.Fast.Components.FluentUI.IconSize.Size20 Filled=false></FluentIcon></FluentButton>
}
<h3>@currentFeed.Title</h3>
<summary class="text-secondary text-light">@currentFeed.Description</summary>
<CascadingValue Value="FeedPk">
    <FeedItemPreviewer @ref="this.Previewer" JumpPage="JumpPage"></FeedItemPreviewer>
</CascadingValue>

@code {
    [CascadingParameter]
    public Func<Task> RefreshLayout { get; set; }
    [CascadingParameter]
    public ICollection<FeedGroupDto> FeedGroups { get; set; }
    [Parameter]
    public int FeedPk { get; set; }
    public FeedItemPreviewer Previewer { get; set; }
    private FeedDto currentFeed;
    private int _lastFeedId;
    public Func<int, Task<PagedList<FeedItemDto>>> JumpPage => i => FeedService.GetFeedItemsPreviewAsync(FeedPk, i);

    private async Task SetCurrentFeedFavoriteAsync()
    {
        await FeedService.SetFeedsFavoriteAsync(new[] { currentFeed.Pk });
        await RefreshLayout();
    }
    private async Task SetCurrentFeedNotFavoriteAsync()
    {
        await FeedService.SetFeedsNotFavoriteAsync(new[] { currentFeed.Pk });
        await RefreshLayout();
    }

    protected override async Task OnParametersSetAsync()
    {
        // TODO : Here, in blazor server,this method got called twice, the first time , Slug was its default value, nothing set, it's the 2nd time that the param is set!
        //https://github.com/dotnet/AspNetCore.Docs/blob/main/aspnetcore/5.0/blazor/samples/BlazorServerEFCoreSample/BlazorServerDbContextExample/Pages/ViewContact.razor
        foreach (var item in FeedGroups)
        {
            var entity = item.Feeds.FirstOrDefault(x => x.Pk == FeedPk);
            if (entity != null)
                this.currentFeed = entity;
        }
        if (this._lastFeedId != FeedPk)
        {
            this._lastFeedId = FeedPk;
        }
        if (Previewer != null)//first render it would be null.
            await Previewer.ChangePage(1);
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (currentFeed != null)
            await CommonJs.SetTitle(currentFeed.Title ?? currentFeed.SubscribeLink);

    }
}
