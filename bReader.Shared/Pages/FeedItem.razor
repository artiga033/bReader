@page "/feeditem/{ItemPk:int}"
@inject IFeedService FeedService
@inject CommonJsInterop CommonJs
@using Humanizer

<div class="item-info card">
    <a href="@(feedItemDto.Links.FirstOrDefault())"><h3>@feedItemDto.Title</h3></a>
    @if (feedItemDto.IsFavorite)
    {
        <IconButton IconName="star_filled" Style="color:gold" OnClick="async () => await SetCurrentItemNotFavoriteAsync()"></IconButton>
    }
    else
    {
        <IconButton IconName="star" OnClick="async ()=> await SetCurrentItemFavoriteAsync()"></IconButton>
    }
    @foreach (var author in feedItemDto.Authors)
    {
        <a href="@author.Uri"><span class="text-secondary text-link">@($"{author.Name} <{author.Name}>")</span></a>
    }
    @if (feedItemDto.PublishDate.DateTime != default(DateTime))
    {
        <span>@feedItemDto.PublishDate.Humanize()</span>
    }

    @if (feedItemDto.LastUpdatedTime.DateTime != default(DateTime))
    {
        <span>@feedItemDto.LastUpdatedTime.Humanize()</span>
    }
</div>
<br />
<div class="item-view card">
    @((MarkupString)feedItemDto.Summary)
    <hr class="hr-fading-info" multiple />
    @((MarkupString)feedItemDto.Content)
</div>
@code {
    [CascadingParameter]
    public Func<Task> RefreshLayout { get; set; }
    [Parameter]
    public int ItemPk { get; set; }
    private FeedItemDto feedItemDto;
    private async Task SetCurrentItemFavoriteAsync()
    {
        await FeedService.SetItemsFavoriteAsync(new[] { feedItemDto.Pk });
        await RefreshLayout();
    }
    private async Task SetCurrentItemNotFavoriteAsync()
    {
        await FeedService.SetFeedsNotFavoriteAsync(new[] { feedItemDto.Pk });
        await RefreshLayout();
    }
    private async Task SetCurrentItemReadAsync()
    {
        await FeedService.SetItemsReadAsync(new[] { feedItemDto.Pk });
        await RefreshLayout();
    }
    private async Task SetCurrentItemNotReadAsync()
    {
        await FeedService.SetItemsNotReadAsync(new[] { feedItemDto.Pk });
        await RefreshLayout();
    }
    protected override async Task OnParametersSetAsync()
    {
        this.feedItemDto = await FeedService.GetFeedItemAsync(ItemPk);
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await SetCurrentItemReadAsync();
        if (feedItemDto != null && feedItemDto.Title != null)
            await CommonJs.SetTitle(feedItemDto.Title);
    }
}
