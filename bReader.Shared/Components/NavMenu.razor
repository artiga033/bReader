<div>
    <div class="top-row">
        <span class="navbar-toggler"><FluentButton @onclick="ToggleNavMenu"> <FluentIcon Name="navigation" Size=Microsoft.Fast.Components.FluentUI.IconSize.Size20 Filled=false></FluentIcon></FluentButton></span>
        <span style="color:darkcyan;text-align:center;">bReader</span>
        <span> <FluentButton @onclick="SwitchTheme"><FluentIcon Name="@themeIcon" Size=Microsoft.Fast.Components.FluentUI.IconSize.Size20 Filled=false></FluentIcon></FluentButton> </span>
    </div>
    <nav class="@NavMenuCssClass">

        <FluentListbox TValue=NavLink>
            <FluentOption>
                <NavLink @onclick="ToggleNavMenu" href="/"><FluentIcon Name="home" Size=Microsoft.Fast.Components.FluentUI.IconSize.Size16 Filled=false />  首页 </NavLink>
            </FluentOption>
            <FluentOption>
                <NavLink @onclick="ToggleNavMenu" href="settings"> <FluentIcon Name="settings" Size=Microsoft.Fast.Components.FluentUI.IconSize.Size16 Filled=false /> 设置 </NavLink>
            </FluentOption>
        </FluentListbox>
        <FluentDivider />

        <FluentAccordion>
            <FluentAccordionItem Heading="收藏" Expanded=true>
                <FluentListbox TValue=NavLink>
                    @foreach (var fav in FavoriteFeeds)
                    {
                        <FluentOption>
                            <NavLink @onclick="ToggleNavMenu" href=@($"feed/{fav.Pk}")><span class="nav-content" data-unread=@(fav.UnreadCount)> @fav.Title </span></NavLink>
                        </FluentOption>
                    }
                </FluentListbox>
            </FluentAccordionItem>
            <FluentDivider />
            @foreach (var group in FeedGroups)
            {
                <FluentAccordionItem Heading="@group.Name">
                    <FluentListbox TValue=NavLink>
                        @foreach (var feed in group.Feeds)
                        {
                            <FluentOption>
                                <NavLink @onclick="ToggleNavMenu" href=@($"feed/{feed.Pk}")><span class="nav-content" data-unread=@(feed.UnreadCount)> @feed.Title </span></NavLink>
                            </FluentOption>
                        }
                    </FluentListbox>
                </FluentAccordionItem>
            }
        </FluentAccordion>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [CascadingParameter]
    private ICollection<FeedGroupDto> FeedGroups { get; set; }
    [CascadingParameter]
    private ICollection<FeedDto> FavoriteFeeds { get; set; }
    [Parameter]
    public EventCallback OnThemeChanging { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private bool isDark;
    private string themeIcon => isDark ? "weather_moon" : "weather_sunny";
    private async Task SwitchTheme()
    {
        isDark = !isDark;
        await OnThemeChanging.InvokeAsync();
    }
}
